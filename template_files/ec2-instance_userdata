#!/bin/bash

echo "####  Create Cloud-init lockfile  ####"
  touch /tmp/cloud-init.running


echo "####  Prepare OS  ####"

  echo "## Clean Yum Cache and Update Everything"
    yum clean all
    yum update -y

  echo "## Enable EPEL Yum Repo"
    yum install -y epel-release

  echo "## Install Basic DevTools [ruby/python/wget/git]"
    yum install -y git
    yum install -y wget
    yum install -y ruby

    yum install -y python
      easy_install pip
      ln -s /usr/local/bin/pip /usr/bin/pip


echo "####  Installation and Configuration of AWS Services and Tools  ####"

  echo "## Configure AWS IAM User (EC2 Instance Root) Credentials"
    mkdir -p /root/.aws/
    touch /root/.aws/credentials
    cat <<EOT >> /root/.aws/credentials
[default]
aws_access_key_id=${iamAccessKey}
aws_secret_access_key=${iamSecretKey}
EOT
    touch /root/.aws/config
    cat <<EOT >> /root/.aws/config
[default]
region=${activeRegion}
output=json
EOT


  echo "## Install AWS CLi"
    mkdir -p /aws.services/cli/
    cd /aws.services/cli/
    pip install awscli

  echo "## Install and Configure AWS SSM Service Agent"
    mkdir -p /aws.services/ssm/
    cd /aws.services/ssm/
    # curl https://amazon-ssm-${awsRegion}.s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm
    curl https://amazon-ssm-eu-west-1.s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm
    yum install -y amazon-ssm-agent.rpm

    start amazon-ssm-agent
    status amazon-ssm-agent

  echo "## Install and Configure AWS EFS Mounts"
    yum install -y nfs-utils
    mkdir -p /mnt/efs.mounts

    echo "#- ECS Common Folder"
      ECS_Common_Localpath="/mnt/efs.mounts/ecs_common"
      ECS_Common_Remotepath=$(echo "$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).${efs_master_id}.efs.${awsRegion}.amazonaws.com")
      mkdir -p $ECS_Common_Localpath
      chown -R ec2-user:ec2-user $ECS_Common_Localpath
      echo "$ECS_Common_Remotepath:/ $ECS_Common_Localpath nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
      mount -a -t nfs4

  echo "## Install and Configure AWS Cloudwatch Log Monitoring Service Agent"
    mkdir -p /aws.services/cloudwatch/
    cd /aws.services/cloudwatch/
    touch awslogs.conf
    cat <<EOT >> /aws.services/cloudwatch/awslogs.conf
[general]
state_file = /var/awslogs/state/agent-state
EOT

    wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
    chmod +x ./awslogs-agent-setup.py
    python ./awslogs-agent-setup.py --region ${awsRegion} --non-interactive --configfile=/aws.services/cloudwatch/awslogs.conf
    mkdir -p /var/awslogs/etc/config/


  echo "## AWS Cloudwatch Log Monitoring Service Agent Configuration Files"

    echo "#- AWS Cloudwatch LogGroups: EC2 Instance"
      touch /var/awslogs/etc/config/aws-ec2_instance.logs.conf
      cat <<EOT >> /var/awslogs/etc/config/aws-ec2_instance.logs.conf

[AWS.EC2-Instance.Initialization.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/cloud-init.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Initialization.logs

[AWS.EC2-Instance.InitializationConsole.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/cloud-init-output.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.InitializationConsole.logs

[AWS.EC2-Instance.Audit.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/audit/audit.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Audit.logs

[AWS.EC2-Instance.Messages.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/messages
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Messages.logs

[AWS.EC2-Instance.Boot.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/boot.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Boot.logs

[AWS.EC2-Instance.Cron.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/cron
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Cron.logs

[AWS.EC2-Instance.Dmesg.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/dmesg
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Dmesg.logs

[AWS.EC2-Instance.Dracut.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/dracut.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Dracut.logs

[AWS.EC2-Instance.LogRotate.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/logstatus
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.LogRotate.logs

[AWS.EC2-Instance.Secure.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/secure
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Secure.logs

[AWS.EC2-Instance.Yum.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/yum.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Yum.logs

[AWS.EC2-Instance.Mail.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/maillog
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Mail.logs

[AWS.EC2-Instance.Mail_Statistics.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/mail/statistics
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Mail_Statistics.logs
EOT

    echo "#- AWS Cloudwatch LogGroups: AWS Cloudwatch Service Agent"
      touch /var/awslogs/etc/config/aws-cloudwatch.logs.conf
      cat <<EOT >> /var/awslogs/etc/config/aws-cloudwatch.logs.conf
[AWS.Cloudwatch-Agent.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/awslogs.log
log_stream_name = {instance_id}
log_group_name = AWS.Cloudwatch-Agent.logs
[AWS.Cloudwatch-AgentInstallation.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/awslogs-agent-setup.log
log_stream_name = {instance_id}
log_group_name = AWS.Cloudwatch-AgentInstallation.logs
EOT

    echo "#- AWS Cloudwatch LogGroups: SSM Service Agent"
      touch /var/awslogs/etc/config/aws-ssm.logs.conf
      cat <<EOT >> /var/awslogs/etc/config/aws-ssm.logs.conf
[AWS.SSM-Agent.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/amazon/ssm/amazon-ssm-agent.log
log_stream_name = {instance_id}
log_group_name = AWS.SSM-Agent.logs
EOT

    echo "#- AWS Cloudwatch LogGroups: ECS Service"
      touch /var/awslogs/etc/config/aws-ecs.logs.conf
      cat <<EOT >> /var/awslogs/etc/config/aws-ecs.logs.conf

[docker_service.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/docker
log_stream_name = {instance_id}
log_group_name = aws-ecs-docker_service.logs

[aws-ecs_init.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/ecs/ecs-init.log.*
log_stream_name = {instance_id}
log_group_name = aws-ecs_init.logs

[aws-ecs_agent.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/ecs/ecs-agent.log.*
log_stream_name = {instance_id}
log_group_name = aws-ecs-ecs_agent.logs

EOT

    chkconfig awslogs on
    service awslogs start
    service awslogs restart
    service awslogs status


  echo "## Configure ECS Service Agent ##"
    echo "ECS_CLUSTER=${ecs_cluster_name}" >> /etc/ecs/ecs.config


# echo "###  Altering EC2 Instace ServiceStatus Tag FROM [EC2-Initialization-STARTed] TO [EC2-Initialization-ENDed]  ###"
# aws ec2 delete-tags --resources $ec2InstaceID --tags Key=ServiceStatus,Value=EC2-Initialization-STARTed
# aws ec2 create-tags --resources $ec2InstaceID --tags Key=ServiceStatus,Value=EC2-Initialization-ENDed

echo "#### Remove Cloud-init lockfile ####"
  rm -rf /tmp/cloud-init.running
